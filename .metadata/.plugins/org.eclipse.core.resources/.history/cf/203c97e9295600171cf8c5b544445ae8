package ds.doublyLinkedList;

public class DoublyLinkedList {
	
//---------------------------------------------------------------------------------
	//class attributes
	private Node first;
	private Node last;
	
//---------------------------------------------------------------------------------
	//our constructor method
	public DoublyLinkedList(){
		this.first = null;
		this.last = null;
	}
//---------------------------------------------------------------------------------
	
	public boolean isEmpty(){
		return first == null;
	}
//---------------------------------------------------------------------------------
	
	public void insertFirst(int data){
		Node newNode = new Node();
		newNode.data = data;
		
		if(isEmpty()){
			last = newNode; //if empty, last will refer to the new Node being created
		}else{
			first.previous = newNode;//so first is pointing at the first node in the list. The attribute of previous that is attached to the first node in the list is pointing back to first
		}
		
		newNode.next = first;// the new node's next field will point to the old first
		this.first = newNode; //this is the final step in the insertion, now the reference of first for the linked list will point to the node we just passed in
	}
//---------------------------------------------------------------------------------

	public void insertLast(int data){
		
	}
	
}
