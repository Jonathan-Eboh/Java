package ds.circularLinkedList;

public class CircularLinkedList {
	private Node first;
	private Node last;
	
	//Don't need the constructor in this case but it helps for visibility and completeness
	public CircularLinkedList(){
		first = null;
		last = null;
	}
	
	private boolean isEmpty() {
		return first == null; //this will return true or false
	}
	
	public void insertFirst(int data){
		Node newNode = new Node();
		newNode.data = data;
		
		if(isEmpty()){
			last = newNode; //assignns the end of the list to be the one and only node that we just created
			
			newNode.next = first;// newNode --> old first
			first = newNode; // first place, our new first node
		}
	}
	
	public void insertLast(int data){
		Node newNode = new Node();
		newNode.data = data;
		
		if(isEmpty()){
			
		}
	}

	
}
